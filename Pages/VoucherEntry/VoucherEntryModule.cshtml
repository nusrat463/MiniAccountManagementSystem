@page
@model VoucherEntryModuleModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<form method="post">
    <label>Date:</label>
    <input asp-for="Voucher.VoucherDate" type="date" required />

    <label>Reference No:</label>
    <input asp-for="Voucher.ReferenceNo" />

    <label>Voucher Type:</label>
    <select asp-for="Voucher.VoucherType" required>
        <option value="">Select</option>
        <option value="Journal">Journal</option>
        <option value="Payment">Payment</option>
        <option value="Receipt">Receipt</option>
    </select>

    <table id="entriesTable">
        <thead>
            <tr>
                <th>Account</th>
                <th>Debit</th>
                <th>Credit</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Voucher.Entries.Count; i++)
            {
                <tr>
                    <td>
                        <select asp-for="Voucher.Entries[@i].AccountId" asp-items="Model.AccountList">
                            <option value="">Select Account</option>
                        </select>
                    </td>
                    <td>
                        <input asp-for="Voucher.Entries[@i].Debit" type="number" step="0.01" />
                    </td>
                    <td>
                        <input asp-for="Voucher.Entries[@i].Credit" type="number" step="0.01" />
                    </td>
                    <td>
                        <button type="submit" name="removeIndex" value="@i">Remove</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>

    <button type="button" onclick="addRow()">Add Entry</button>
    <button type="submit">Submit</button>
</form>

@section Scripts {
    <script>
        function addRow() {
            var accounts = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.AccountList));
            const table = document.getElementById('entriesTable').getElementsByTagName('tbody')[0];
            const rowCount = table.rows.length;
            const newRow = table.insertRow();

            let options = '';
            accounts.forEach(function (account) {
                const selected = account.Value === "" ? 'selected' : '';
                options += `<option value="${account.Value}" ${selected}>${account.Text}</option>`;
            });

            newRow.innerHTML = `
                    <td><select name="Voucher.Entries[${rowCount}].AccountId">${options}</select></td>
                    <td><input type="number" step="0.01" name="Voucher.Entries[${rowCount}].Debit" /></td>
                    <td><input type="number" step="0.01" name="Voucher.Entries[${rowCount}].Credit" /></td>
                    <td><button type="button" onclick="removeRow(this)">Remove</button></td>
                `;
        }


        function removeRow(button) {
            const row = button.closest('tr');
            row.remove();

            // Re-index rows after removal
            const rows = document.querySelectorAll('#entriesTable tbody tr');
            rows.forEach((r, i) => {
                r.querySelectorAll('select, input').forEach(input => {
                    const name = input.name;
                    const parts = name.split('.');
                    parts[1] = `Entries[${i}]`;
                    input.name = parts.join('.');
                });
            });
        }
    </script>
}
